$PBExportHeader$f_connect_to_db_main.srf
global type f_connect_to_db_main from function_object
end type

forward prototypes
global subroutine f_connect_to_db_main (boolean ab_initial_open)
end prototypes

global subroutine f_connect_to_db_main (boolean ab_initial_open);string ls_MB_String
string ls_DB_Location
boolean lb_Connected
string ls_Connection
integer li_Return
string ls_App_Name
pointer oldpointer // Declares a pointer variable
string ls_ASA_Path
string ls_RegPath_ASA

IF ( FileExists(GetCurrentDirectory() + "\dbsrv9.exe") AND gb_Platform_Is_CE ) OR NOT gb_Platform_Is_CE THEN
	ls_ASA_Path = GetCurrentDirectory()
	ls_RegPath_ASA = 'Software\Sybase\SQL Anywhere\11.0'
	li_Return = RegistryGet("HKEY_LOCAL_MACHINE\" + ls_RegPath_ASA, "Location", RegString!, ls_ASA_Path)
	IF NOT Empty(ls_ASA_Path) THEN
		gb_SA11 = TRUE
	ELSE
		gb_SA11 = FALSE
		ls_RegPath_ASA = 'Software\Sybase\Adaptive Server Anywhere\9.0'
		li_Return = RegistryGet("HKEY_LOCAL_MACHINE\" + ls_RegPath_ASA, "Location", RegString!, ls_ASA_Path)
	END IF
ELSE
	ls_RegPath_ASA = 'Software\Sybase\SQL Anywhere\11.0'
	li_Return = RegistryGet("HKEY_CURRENT_USER\" + ls_RegPath_ASA, "Location", RegString!, ls_ASA_Path)
	IF NOT Empty(ls_ASA_Path) THEN
		gb_SA11 = TRUE
	ELSE
		gb_SA11 = FALSE
		ls_RegPath_ASA = 'Software\Sybase\Adaptive Server Anywhere\9.0'
		li_Return = RegistryGet("HKEY_CURRENT_USER\" + ls_RegPath_ASA, "Location", RegString!, ls_ASA_Path)
	END IF
END IF
IF NOT Empty(ls_ASA_Path) THEN
	// The below IF - END IF doesn't work because it creates a UNICODE file where
	// the DSN file must be ASCII
	//IF NOT FileExists("\windows\esoms.dsn") THEN
	//	f_Create_DSN_File()
	//END IF
	ls_DB_Location = GetCurrentDirectory()
//	ls_DB_Location = "\Program Files\Mobile eSOMS"
	IF ( FileExists( ls_DB_Location + "\esoms.db") AND gb_Platform_Is_CE ) OR NOT gb_Platform_Is_CE THEN
		oldpointer = SetPointer(HourGlass!)
		
		SQLMain.DBMS = 'ODBC'
		SQLMain.AutoCommit = False
		IF gb_Platform_Is_CE THEN
			// 12-14-2004 ==> DisableBind=1 at the end of the DBPARM property is because of a bug in ASA 9.0.2.2451
			IF gb_SA11 THEN
//				ls_Connection = "ConnectString='DSN=Mobile eSOMS;UID=dba;PWD=sql'"

				ls_Connection = "ConnectString='Driver=\Windows\dbodbc11.dll;UID=dba;PWD=sql;ENG=eSOMS;DBN=eSOMS;START=" + ls_ASA_Path + "\dbsrv11.exe -qi -x tcpip(dobroadcast=no;port=2638) -c 4M;DBF=" + ls_DB_Location + "\eSOMS.db',DisableBind=1"
//				ls_Connection = "ConnectString='Driver=\Windows\dbodbc11.dll;UID=dba;PWD=sql;ENG=eSOMS;DBN=eSOMS;START=" + ls_ASA_Path + "\dbsrv11.exe -qi -x tcpip(dobroadcast=no;port=2638) -c 4M;DBF=" + ls_DB_Location + "\eSOMS.db',ConnectOption='SQL_DRIVER_CONNECT,SQL_DRIVER_NOPROMPT',DisableBind=1"

//				ls_Connection = "ConnectString='Driver=\Windows\dbodbc11.dll;UID=dba;PWD=sql;ENG=eSOMS;DBN=eSOMS;DBF=" + ls_DB_Location + "\eSOMS.db',ConnectOption='SQL_DRIVER_CONNECT,SQL_DRIVER_NOPROMPT',DisableBind=1"
			ELSE
//				ls_Connection = "ConnectString='Driver=dbodbc9.dll;UID=dba;PWD=sql;ENG=eSOMS;DBN=eSOMS;START=" + ls_ASA_Path + "\dbsrv9.exe -q -x shmem,tcpip(dobroadcast=none;port=2638) -zr SQL -gp 1024 -c 4M;DBF=" + GetCurrentDirectory() + "\eSOMS.db',ConnectOption='SQL_DRIVER_CONNECT,SQL_DRIVER_NOPROMPT',DisableBind=1"
				ls_Connection = "ConnectString='Driver=dbodbc9.dll;UID=dba;PWD=sql;ENG=eSOMS;DBN=eSOMS;START=" + ls_ASA_Path + "\dbsrv9.exe -q -x tcpip(dobroadcast=no;port=2638) -gp 1024 -c 4M;DBF=" + ls_DB_Location + "\eSOMS.db',ConnectOption='SQL_DRIVER_CONNECT,SQL_DRIVER_NOPROMPT',DisableBind=1"
			END IF
		ELSE
//			ls_Connection = "ConnectString='DSN=MOBILE_ESOMS_SA11;UID=dba;PWD=sql'"
//			ls_Connection = "ConnectString='Driver=SQL Anywhere 11;UID=dba;PWD=sql;ENG=eSOMS;DBN=eSOMS;"
			ls_Connection = "ConnectString='Driver=SQL Anywhere 11;UID=dba;PWD=sql;ENG=eSOMS;DBN=eSOMS;START=" + ls_ASA_Path + "\bin32\dbsrv11.exe -qi -x tcpip(dobroadcast=no;port=2638) -c 4M;DBF=" +  ls_DB_Location + "\esoms.db',ConnectOption='SQL_DRIVER_CONNECT',DisableBind=1"
//			ls_Connection = "ConnectString='Driver=SQL Anywhere 11;UID=dba;PWD=sql;ENG=eSOMS;DBN=eSOMS;START=" + ls_ASA_Path + "\bin32\dbsrv11.exe -qi -x tcpip(dobroadcast=no;port=2638) -c 4M;DBF=" +  ls_DB_Location + "\esoms.db',ConnectOption='SQL_DRIVER_CONNECT',DisableBind=1"
			
//			CHOOSE CASE gs_Module_Id
//				CASE 'NEDBS'
//					ls_Connection = "ConnectString='DSN=ESOMS_NEDBS;UID=dba;PWD=sql'"
//				CASE 'NPTS'
////					ls_Connection = "ConnectString='DSN=remote;UID=dba;PWD=sql'"
//					ls_Connection = "ConnectString='DSN=ESOMS_NPTS;UID=dba;PWD=sql'"
//				CASE 'NLOGS'
////					ls_Connection = "ConnectString='DSN=ESOMS_NLOGS;UID=dba;PWD=sql'"
//					ls_Connection = "ConnectString='DSN=ESOMS_NPTS;UID=dba;PWD=sql'"
//				CASE 'NCCS'
//					ls_Connection = "ConnectString='DSN=ESOMS_NCCS;UID=dba;PWD=sql'"
//				CASE 'NCS'
//					ls_Connection = "ConnectString='DSN=ESOMS_NCS;UID=dba;PWD=sql'"
//				CASE 'PIC'
//					ls_Connection = "ConnectString='DSN=ESOMS_PIC;UID=dba;PWD=sql'"
//			END CHOOSE
		END IF
		SQLMain.DBPARM = ls_Connection
		
//		SQLMain.LOCK = 'RC'

		////////////////////////////////Appeon Begin///////////////////////////
		// Profile eSOMS
		SQLMain.DBMS = "ODBC"
		SQLMain.AutoCommit = False
		SQLMain.DBParm = "ConnectString='DSN=eSOMS;UID=dba;PWD=sql'"
	
		////////////////////////////////Appeon End///////////////////////////
	
		CONNECT USING SQLMain;
		

		lb_Connected = ( SQLMain.SQLCode = 0 )
		
		IF NOT lb_Connected THEN
//			ls_MB_String = f_LanguageString('ERROR:_###_@@@', 'Error: ###~n~r@@@')
//			ls_MB_String = StrTran(ls_MB_String, '###', String(SQLMain.SQLCode))
//			ls_MB_String = StrTran(ls_MB_String, '@@@', SQLMain.SQLErrText)
//			MessageBox(f_LanguageString('ERROR_-_UNABLE_TO_START_DATABASE', 'Error - Unable to start database'), ls_MB_String)
			ls_MB_String = 'Error: ' + String(SQLMain.SQLCode) + '~n~r' + SQLMain.SQLErrText

			MessageBox('Error - Unable to start database', ls_MB_String)

			SetPointer(Arrow!)
			HALT
		END IF
		IF gb_SA11 THEN
			string ls_SQL
			ls_SQL = "SET TEMPORARY OPTION CONNECTION_AUTHENTICATION='Company=Ventyx;Application=eSOMS;Signature=000fa55157edb8e14d818eb4fe3db41447146f1571g59565faf413c2f174c22c14a17adeee0bdf212ca'"
			EXECUTE IMMEDIATE :ls_SQL USING SQLCA ;
		END IF		
		IF NOT ab_Initial_Open THEN
			guo_user.uf_Reinitialize()
			guo_user_settings.uf_Reinitialize()
		END IF
	
		ls_App_Name = MID(gs_Window_Title, POS(gs_Window_Title, " ") + 1)
		IF NOT lb_Connected THEN
			RegistrySet("HKEY_LOCAL_MACHINE\Software\TechAssist\Mobile eSOMS\" + ls_App_Name, "Connected", RegString!, 'FALSE')
//			ls_MB_String = f_LanguageString('COULD_NOT_CONNECT_TO_MOBILE_ESOMS_DATABASE._###', "Could not connect to Mobile eSOMS database.~n~r###")
//			ls_MB_String = StrTran(ls_MB_String, '###', SQLMain.SQLErrText)
//			MessageBox(f_LanguageString('ERROR_-_HALTING', 'Error - Halting'), ls_MB_String, Exclamation!)
			ls_MB_String = "Could not connect to Mobile eSOMS database.~n~r" + SQLMain.SQLErrText
			MessageBox('Error - Halting', ls_MB_String, Exclamation!)
			SetPointer(oldpointer)
			HALT
		ELSE
			RegistrySet("HKEY_LOCAL_MACHINE\Software\TechAssist\Mobile eSOMS\" + ls_App_Name, "Connected", RegString!, 'TRUE')
		END IF
		SetPointer(oldpointer)
	ELSE
		RegistrySet("HKEY_LOCAL_MACHINE\Software\TechAssist\Mobile eSOMS\" + ls_App_Name, "Connected", RegString!, 'FALSE')
//		ls_MB_String = f_LanguageString('COULD_NOT_LOCATE_THE_MOBILE_ESOMS_DATABASE._###', "Could not locate the Mobile eSOMS database.~n~r###")
//		ls_MB_String = StrTran(ls_MB_String, '###', SQLMain.SQLErrText)
//		MessageBox(f_LanguageString('ERROR_-_HALTING', 'Error - Halting'), ls_MB_String, Exclamation!)
		ls_MB_String = "Could not locate the Mobile eSOMS database.~n~r" + SQLMain.SQLErrText
		MessageBox('Error - Halting', ls_MB_String, Exclamation!)
		SetPointer(oldpointer)
		HALT
	END IF
ELSE
	RegistrySet("HKEY_LOCAL_MACHINE\Software\TechAssist\Mobile eSOMS\" + ls_App_Name, "Connected", RegString!, 'FALSE')
//	ls_MB_String = f_LanguageString('COULD_NOT_LOCATE_THE_ASA_DATABASE_ENGINE._###', "Could not locate the ASA database engine.~n~r###")
//	ls_MB_String = StrTran(ls_MB_String, '###', SQLMain.SQLErrText)
//	MessageBox(f_LanguageString('ERROR_-_HALTING', 'Error - Halting'), ls_MB_String, Exclamation!)
	ls_MB_String = "Could not locate the ASA database engine.~n~r" + SQLMain.SQLErrText
	MessageBox('Error - Halting', ls_MB_String, Exclamation!)
	SetPointer(oldpointer)
	HALT
END IF
end subroutine


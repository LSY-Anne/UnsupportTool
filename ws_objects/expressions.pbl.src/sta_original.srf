$PBExportHeader$sta_original.srf
global type sta_original from function_object
end type

forward prototypes
global function string sta_original (integer station)
end prototypes

global function string sta_original (integer station);datawindow dw
integer li_row , li_tour , li_sequence,li_sta , li_shift_no
string ls_user_name,ls_Reading,ls_app_name
date ld_date
integer li_rev_no

//IF IsValid(w_tour) THEN
//	dw = w_tour.tab_tour.tabpage_readings.dw_readings
//	li_row		= dw.GetRow()
	li_tour		= gsu_Tour_Parameters[gi_Current_Tour].tour_number
	li_rev_no	= gsu_Tour_Parameters[gi_Current_Tour].rev_no
	li_sta		= gsu_Tour_Parameters[gi_Current_Tour].station
	ld_date 		= gsu_Tour_Parameters[gi_Current_Tour].tour_date
	li_shift_no	= gsu_Tour_Parameters[gi_Current_Tour].shift_no

  SELECT rd 
    INTO :ls_Reading 
    FROM history 
   WHERE ( dt = :ld_date ) 
     AND ( sta = :station ) 
     AND ( tour = :li_tour ) 
	  AND ( rev_no = :li_rev_no ) 
	  AND ( reading_id = 0 ) 
     AND ( shift_no = :li_shift_no ) 
	USING SQLCA ;

	IF ( SQLCA.SQLCode <> 0 ) THEN
		ls_Reading = "Rd Not Found"
	ELSEIF IsNull(ls_Reading) THEN
		ls_Reading = "Rd is Null"
	END IF
//END IF

RETURN ls_Reading
end function

